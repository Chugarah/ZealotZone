/*! tailwindcss v4.0.12 | MIT License | https://tailwindcss.com */
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-mono: var(--font-family-base);
    --color-amber-200: oklch(0.924 0.12 95.746);
    --color-blue-500: oklch(0.623 0.214 259.815);
    --color-blue-600: oklch(0.546 0.245 262.881);
    --color-gray-100: oklch(0.967 0.003 264.542);
    --color-gray-200: oklch(0.928 0.006 264.531);
    --color-gray-500: oklch(0.551 0.027 264.364);
    --color-gray-800: oklch(0.278 0.033 256.848);
    --color-neutral-50: oklch(0.985 0 0);
    --color-neutral-200: oklch(0.922 0 0);
    --color-neutral-400: oklch(0.708 0 0);
    --color-neutral-700: oklch(0.371 0 0);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-xl: 0.75rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-family-base);
    --default-font-feature-settings: var(--font-sans--font-feature-settings);
    --default-font-variation-settings: var(
      --font-sans--font-variation-settings
    );
    --default-mono-font-family: var(--font-mono);
    --default-mono-font-feature-settings: var(
      --font-mono--font-feature-settings
    );
    --default-mono-font-variation-settings: var(
      --font-mono--font-variation-settings
    );
    --spacing-0875: 0.875rem;
    --spacing-1000: 1rem;
    --spacing-10625: 1.0625rem;
    --spacing-1375: 1.375rem;
    --spacing-14375: 1.4375rem;
    --spacing-1500: 1.5rem;
    --spacing-1750: 1.75rem;
    --spacing-1875: 1.875rem;
    --spacing-2500: 2.5em;
    --spacing-2625: 2.625rem;
    --spacing-3000: 3rem;
    --spacing-40000: 25em;
    --breakpoint-large: 90rem;
    --color-body-light: rgba(99, 112, 133, 1);
    --color-body-dark: rgba(40, 38, 59, 1);
    --color-grey-100: rgba(245, 247, 250, 1);
    --color-alpha-border-100: rgba(235, 238, 242, 1);
    --color-alpha-border-200: rgba(227, 229, 232, 1);
    --color-background: rgba(241, 243, 247, 1);
    --color-accent: rgba(var(--base-accent), 1);
    --color-green: rgba(var(--base-green), 1);
    --color-accent-opacity: rgba(var(--base-accent), var(--opacity-low));
    --color-accent-hover: rgba(var(--base-accent), var(--opacity-medium));
    --color-alpha-border-hover: rgba(var(--color-green), var(--opacity-low));
    --shadow-opacity-low: 0.2;
    --shadow-opacity-highest: 0.25;
    --shadow-color-button: rgba(var(--shadow-color-accent), var(--shadow-opacity-highest));
    --shadow-button: var(--shadow-offset-button) var(--shadow-color-button);
    --font-nunito: 'Nunito', ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-family-base: var(--font-nunito);
    --menu-horizontal: 0.94rem;
    --text-body-regular-15: 0.94rem;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var( --default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji" );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var( --default-font-variation-settings, normal );
    -webkit-tap-highlight-color: transparent;
  }
  body {
    line-height: inherit;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var( --default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace );
    font-feature-settings: var( --default-mono-font-feature-settings, normal );
    font-variation-settings: var( --default-mono-font-variation-settings, normal );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
    color: color-mix(in oklab, currentColor 50%, transparent);
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .start-0\.5 {
    inset-inline-start: calc(var(--spacing) * 0.5);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .container {
    width: 100%;
    @media (width >= 480px) {
      max-width: 480px;
    }
    @media (width >= 768px) {
      max-width: 768px;
    }
    @media (width >= 1024px) {
      max-width: 1024px;
    }
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 90rem) {
      max-width: 90rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }
  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }
  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-52 {
    height: calc(var(--spacing) * 52);
  }
  .min-h-40 {
    min-height: calc(var(--spacing) * 40);
  }
  .w-11 {
    width: calc(var(--spacing) * 11);
  }
  .shrink-0 {
    flex-shrink: 0;
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .list-inside {
    list-style-position: inside;
  }
  .list-decimal {
    list-style-type: decimal;
  }
  .list-disc {
    list-style-type: disc;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .gap-x-0\.5 {
    column-gap: calc(var(--spacing) * 0.5);
  }
  .gap-x-1 {
    column-gap: calc(var(--spacing) * 1);
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-s-4 {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 4px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-transparent {
    border-color: transparent;
  }
  .bg-amber-200 {
    background-color: var(--color-amber-200);
  }
  .bg-background {
    background-color: var(--color-background);
  }
  .bg-gray-200 {
    background-color: var(--color-gray-200);
  }
  .bg-neutral-50 {
    background-color: var(--color-neutral-50);
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .px-20 {
    padding-inline: calc(var(--spacing) * 20);
  }
  .py-10 {
    padding-block: calc(var(--spacing) * 10);
  }
  .py-1875 {
    padding-block: var(--spacing-1875);
  }
  .py-2500 {
    padding-block: var(--spacing-2500);
  }
  .ps-4 {
    padding-inline-start: calc(var(--spacing) * 4);
  }
  .pr-1500 {
    padding-right: var(--spacing-1500);
  }
  .pr-1750 {
    padding-right: var(--spacing-1750);
  }
  .pl-14375 {
    padding-left: var(--spacing-14375);
  }
  .align-middle {
    vertical-align: middle;
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-inherit {
    color: inherit;
  }
  .decoration-2 {
    text-decoration-thickness: 2px;
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .\!transition-transform {
    transition-property: transform, translate, scale, rotate !important;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function)) !important;
    transition-duration: var(--tw-duration, var(--default-transition-duration)) !important;
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .peer-checked\:translate-x-full {
    &:is(:where(.peer):checked ~ *) {
      --tw-translate-x: 100%;
      translate: var(--tw-translate-x) var(--tw-translate-y);
    }
  }
  .peer-checked\:bg-blue-600 {
    &:is(:where(.peer):checked ~ *) {
      background-color: var(--color-blue-600);
    }
  }
  .peer-disabled\:pointer-events-none {
    &:is(:where(.peer):disabled ~ *) {
      pointer-events: none;
    }
  }
  .peer-disabled\:opacity-50 {
    &:is(:where(.peer):disabled ~ *) {
      opacity: 50%;
    }
  }
  .marker\:text-sm {
    & *::marker {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
    &::marker {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }
  .before\:text-gray-500 {
    &::before {
      content: var(--tw-content);
      color: var(--color-gray-500);
    }
  }
  .hover\:bg-gray-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-100);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .focus\:bg-gray-100 {
    &:focus {
      background-color: var(--color-gray-100);
    }
  }
  .focus\:underline {
    &:focus {
      text-decoration-line: underline;
    }
  }
  .focus\:outline-hidden {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
  }
  .disabled\:pointer-events-none {
    &:disabled {
      pointer-events: none;
    }
  }
  .disabled\:opacity-50 {
    &:disabled {
      opacity: 50%;
    }
  }
  .sm\:ps-6 {
    @media (width >= 40rem) {
      padding-inline-start: calc(var(--spacing) * 6);
    }
  }
  .dark\:border-neutral-700 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-700);
    }
  }
  .dark\:bg-neutral-400 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-400);
    }
  }
  .dark\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-700);
    }
  }
  .dark\:text-neutral-200 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-200);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:peer-checked\:bg-blue-500 {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        background-color: var(--color-blue-500);
      }
    }
  }
  .dark\:peer-checked\:bg-white {
    &:where(.dark, .dark *) {
      &:is(:where(.peer):checked ~ *) {
        background-color: var(--color-white);
      }
    }
  }
  .sm\:\[\&\>p\]\:text-lg {
    @media (width >= 40rem) {
      &>p {
        font-size: var(--text-lg);
        line-height: var(--tw-leading, var(--text-lg--line-height));
      }
    }
  }
}
.container {
  margin: auto;
  display: flex;
  height: 100vh;
  max-width: var(--breakpoint-large);
  flex-direction: column;
}
.main-skeleton {
  display: grid;
  flex-grow: 1;
  grid-auto-flow: column;
  grid-auto-rows: auto;
  padding-inline: var(--spacing-1000);
}
.main-content-skeleton {
  overflow: clip;
}
.main-content-footer-skeleton {
  text-align: center;
}
.main-content-nav {
  grid-column-start: 1;
  grid-row-start: 1;
  grid-row-end: 2;
  padding-right: var(--spacing-1000);
}
.header_menu {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
.header_container {
  padding-right: var(--spacing-1875);
}
.main-content-body {
  padding-inline: var(--spacing-1875);
  padding-block: var(--spacing-2625);
}
.main-content-project-nav {
  padding-bottom: var(--spacing-1875);
  span {
    padding-right: var(--spacing-10625);
  }
}
:root {
  --base-accent: 45, 153, 255;
  --base-green: 49, 212, 130;
  --base-dark-green: 36, 178, 107;
  --base-orange: 255, 150, 64;
  --base-dark-orange: 240, 147, 48;
  --base-red: 255, 102, 64;
  --base-dark-red: 233, 77, 63;
  --base-yellow: 255, 212, 34;
  --base-dark-yellow: 252, 187, 66;
  --base-purple: 130, 106, 249;
  --base-dark-purple: 99, 76, 212;
  --base-blue-1: 44, 217, 217;
  --base-blue-dark: 45, 125, 204;
  --base-dark-accent: 38, 130, 217;
  --opacity-low: 0.1;
  --opacity-medium: 0.5;
  --opacity-high: 0.9;
}
@layer base {
  &:where(.dark, .dark *) {
    --color-heading: rgba(255, 255, 255, var(--opacity-high));
    --color-body-light: rgba(200, 200, 220, 1);
    --color-body-dark: rgba(180, 180, 200, 1);
    --color-grey-100: rgba(40, 40, 50, 1);
    --color-grey-200: rgba(50, 50, 60, 1);
    --color-grey-300: rgba(60, 60, 70, 1);
    --color-grey-400: rgba(70, 70, 80, 1);
    --color-border-100: rgba(60, 60, 70, 1);
    --color-border-200: rgba(70, 70, 80, 1);
    --color-border-300: rgba(90, 90, 100, 1);
    --color-background: rgba(20, 20, 30, 1);
    --color-surface: rgba(30, 30, 40, 1);
    --color-green: rgba(var(--base-dark-green), 1);
    --color-orange: rgba(var(--base-dark-orange), 1);
    --color-yellow: rgba(var(--base-dark-yellow), 1);
    --color-red: rgba(var(--base-dark-red), 1);
    --color-purple: rgba(var(--base-dark-purple), 1);
    --color-blue-dark: rgba(var(--base-dark-accent), 1);
    --color-accent-opacity: rgba(var(--base-accent), 0.15);
    --color-green-opacity: rgba(var(--base-dark-green), 0.15);
    --color-red-opacity: rgba(var(--base-dark-red), 0.15);
    --color-purple-opacity: rgba(var(--base-dark-purple), 0.15);
  }
}
:root {
  --shadow-color-light: 4, 15, 21;
  --shadow-color-dark: 0, 0, 0;
  --shadow-color-accent: 0, 129, 255;
  --shadow-offset-surface-1: -16px 30px 25px;
  --shadow-offset-surface-2: 0px 20px 30px;
  --shadow-offset-surface-3: 0px 40px 30px;
  --shadow-offset-popup-1: 0px 50px 50px;
  --shadow-offset-popup-2: 0px 40px 30px;
  --shadow-offset-popover-1: 0px 8px 30px;
  --shadow-offset-popover-2: 0px 40px 20px;
  --shadow-offset-popover-3: 0px 16px 80px;
  --shadow-offset-button: 0px 4px 16px;
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: normal;
  font-weight: 200;
  src: url('/fonts/Nunito/nunito-v26-latin-200.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: italic;
  font-weight: 200;
  src: url('/fonts/Nunito/nunito-v26-latin-200italic.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: normal;
  font-weight: 300;
  src: url('/fonts/Nunito/nunito-v26-latin-300.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: italic;
  font-weight: 300;
  src: url('/fonts/Nunito/nunito-v26-latin-300italic.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: normal;
  font-weight: 400;
  src: url('/fonts/Nunito/nunito-v26-latin-regular.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: italic;
  font-weight: 400;
  src: url('/fonts/Nunito/nunito-v26-latin-italic.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: normal;
  font-weight: 500;
  src: url('/fonts/Nunito/nunito-v26-latin-500.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: italic;
  font-weight: 500;
  src: url('/fonts/Nunito/nunito-v26-latin-500italic.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: normal;
  font-weight: 600;
  src: url('/fonts/Nunito/nunito-v26-latin-600.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: italic;
  font-weight: 600;
  src: url('/fonts/Nunito/nunito-v26-latin-600italic.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: normal;
  font-weight: 700;
  src: url('/fonts/Nunito/nunito-v26-latin-700.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: italic;
  font-weight: 700;
  src: url('/fonts/Nunito/nunito-v26-latin-700italic.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: normal;
  font-weight: 800;
  src: url('/fonts/Nunito/nunito-v26-latin-800.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: italic;
  font-weight: 800;
  src: url('/fonts/Nunito/nunito-v26-latin-800italic.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: normal;
  font-weight: 900;
  src: url('/fonts/Nunito/nunito-v26-latin-900.woff2') format('woff2');
}
@font-face {
  font-display: swap;
  font-family: 'Nunito';
  font-style: italic;
  font-weight: 900;
  src: url('/fonts/Nunito/nunito-v26-latin-900italic.woff2') format('woff2');
}
@layer base {
  :root {
    font-family: var(--font-nunito);
  }
  body {
    font-family: var(--font-nunito);
  }
  p {
    font-size: var(--text-body-regular-15);
  }
  h1 {
    font-size: var(--text-h1);
  }
  h2 {
    font-size: var(--text-h2);
  }
  h3 {
    font-size: var(--text-h3);
  }
  h4 {
    font-size: var(--text-h4);
  }
  h5 {
    font-size: var(--text-h5);
  }
  h6 {
    font-size: var(--text-h6);
  }
}
@layer components {
  .menu-horizontal {
    font-weight: var(--font-weight-bold);
    font-size: var(--menu-horizontal);
    color: var(--color-body-light);
  }
}
@layer components {
  .btn-primary {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    column-gap: calc(var(--spacing) * 2);
    border-radius: var(--spacing-0875);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-white);
    background-color: var(--color-accent);
    padding-block: var(--spacing-0875);
    padding-right: var(--spacing-1500);
    padding-left: var(--spacing-1375);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-white);
    --tw-drop-shadow: drop-shadow(var(--shadow-button));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent-hover);
      }
    }
    &:focus {
      background-color: var(--color-accent-hover);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      background-color: var(--color-accent-opacity);
    }
  }
  .btn-secondary {
    display: inline-flex;
    min-width: var(--spacing-40000);
    align-items: center;
    justify-content: center;
    column-gap: calc(var(--spacing) * 2);
    border-radius: var(--spacing-0875);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-white);
    background-color: var(--color-accent);
    padding-inline: var(--spacing-1500);
    padding-block: var(--spacing-0875);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
    color: var(--color-white);
    --tw-drop-shadow: drop-shadow(var(--shadow-button));
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-accent-hover);
      }
    }
    &:focus {
      background-color: var(--color-accent-hover);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
      @media (forced-colors: active) {
        outline: 2px solid transparent;
        outline-offset: 2px;
      }
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      background-color: var(--color-accent-opacity);
    }
  }
}
@layer components {
  .form-input {
    display: block;
    min-height: var(--spacing-3000);
    min-width: var(--spacing-40000);
    border-radius: var(--spacing-0875);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: var(--color-alpha-border-100);
    padding: calc(var(--spacing) * 3);
    color: var(--color-body-dark);
    &::placeholder {
      color: var(--color-body-light);
    }
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-alpha-border-200);
      }
    }
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-alpha-border-hover);
      }
    }
    &:focus {
      border-color: var(--color-alpha-border-hover);
    }
    &:focus {
      background-color: var(--color-alpha-border-hover);
    }
    &:focus {
      color: var(--color-body-dark);
    }
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
    &:disabled {
      pointer-events: none;
    }
    &:disabled {
      background-color: var(--color-grey-100);
    }
    @media (width >= 40rem) {
      padding: calc(var(--spacing) * 4);
    }
    @media (width >= 40rem) {
      font-size: var(--text-body-regular-15);
    }
  }
}
.theme-transition, .theme-transition *, .theme-transition *::before, .theme-transition *::after {
  transition: all 0.3s ease !important;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
